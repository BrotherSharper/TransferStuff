# Puts the module's archive and manifest into the release
name: Populate Release
on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "version=`echo ${{ github.event.release.tag_name }} | cut -c 2-`" >> $GITHUB_ENV # remove the leading v from the version string ("v1.2.3" -> "1.2.3")
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: '16'
      - uses: actions/checkout@v2
      - run: npm install
      - run: npm run build
      - run: npm run packzip
        env:
          NO_CHECK: 1
      - name: Upload module manifest
        uses: actions/upload-artifact@v2
        with:
          name: module-manifest
          path: releases/v${{ env.version }}/module.json
      - name: Upload module archive
        uses: actions/upload-artifact@v2
        with:
          name: module-archive
          path: releases/v${{ env.version }}/transfer-stuff-${{ env.version }}.zip
  build2:
    uses: playest/TransferStuff/.github/workflows/build.yml@main # this should be replacable by .github/workflows/build.yml soon, see here: https://github.community/t/ref-head-in-reusable-workflows/203690/34
    with:
      version: ${{ github.event.release.tag_name }}
  update-release: # add the artifacts to the release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo "version=`echo ${{ github.event.release.tag_name }} | cut -c 2-`" >> $GITHUB_ENV # remove the leading v from the version string ("v1.2.3" -> "1.2.3")
      - name: Get module-manifest
        uses: actions/download-artifact@v2
        with:
          name: module-manifest
      - name: Get module-archive
        uses: actions/download-artifact@v2
        with:
          name: module-archive
      - run: ls -R
      - name: Update Release with Files
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: './module.json, ./transfer-stuff-${{ env.version }}.zip'
          tag: v${{ env.version }}
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
